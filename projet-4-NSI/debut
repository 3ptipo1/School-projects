import pygame
import random
pygame.init()

def change_image(x,y):
    change = [(x,y)]
    if vu[x][y]:
        return []
    if grille_flag[x][y]:
        grille_rect[x][y][0] = 0 #mettre une image de drapeau
    elif grille_bomb[x][y] != -1:
        grille_rect[x][y][0] = 0#mettre une image en fonction de grille_bomb[x][y]
        vu[x][y] = True
    else:
        global perdu
        perdu = True
        grille_bomb[x][y] = -42
        grille_rect[x][y][0] = 0#mettre image bombe rouge
        for coord1 in range(dimensions[0]):
            for coord2 in range(dimensions[1]):
                if grille_flag[coord1][coord2] and grille_bomb[coord1][coord2] != -1:
                    grille_rect[coord1][coord2][0] = 0 #mettre image bombe pas la
                    change.append((coord1,coord2))
                elif grille_bomb[coord1][coord2] == -1 and not grille_flag[coord1][coord2]:
                    grille_rect[coord1][coord2][0] = 0#mettre image bombe
                    change.append((coord1,coord2))
    return change



def decouverte(x,y):
    pass


def set_mines(pos, nb_mine):
    for i in range(nb_mine):
        x,y = random.randint(0, dimensions[0]), random.randint(0, dimensions[1])
        c = 0
        for pg in range(-1,2):
            for pb in range(-1,2):
                if (x+pg,y+pb) == pos:
                    a_cote = True
        while grille_bomb[x][y] == -1 or a_cote:
            c += 1
            assert c >= 50, "Il y a peut etre trop de bombes..."
            x,y = random.randint(0, dimensions[0]), random.randint(0, dimensions[1])
            for pg in range(-1,2):
                for pb in range(-1,2):
                    if (x+pg,y+pb) == pos:
                        a_cote = True
        grille_bomb[x][y] = -1

def set_valeur_case_safe():
    for i in range(dimensions[0]):
        for j in range(dimensions[1]):
            if grille_bomb[i][j] != -1:
                s_bomb = 0
                for pg in range(-1,2):
                    for pb in range(-1,2):
                        if 0 <= i+pg < dimensions[0] and 0 <= j+pb < dimensions[1]:
                            if grille_bomb[i+pg][j+pb] == -1:
                                s_bomb += 1
                grille_bomb[i][j] = s_bomb

        






def pied():
    dimensions = [9,9]
    nb_mine = 10
    taille_case = 24

    bord_g = 20
    bord_h = 100

    size = width, height = bord_g * 2 + dimensions[0] * taille_case, bord_g + bord_h + dimensions[1] * taille_case

    # creation des structures de données
    grille_rect = [[[] for j in range(dimensions[0])] for i in range(dimensions[1])]
    grille_bomb = [[0 for j in range(dimensions[0])] for i in range(dimensions[1])]
    grille_flag = [[False for j in range(dimensions[0])] for i in range(dimensions[1])]
    vu = [[False for j in range(dimensions[0])] for i in range(dimensions[1])]
    first_click = True
    perdu = False

    # création des rect
    screen = pygame.display.set_mode(size)
    screen.fill((198, 198, 198))
    rect_board = pygame.Rect(bord_g, bord_h, dimensions[0] * taille_case, dimensions[1] * taille_case)
    board =  pygame.draw.rect(screen, (128,128,128) , rect_board) 
    pygame.display.flip()
    
    while not perdu:
        for event in pygame.event.get():
            if event.type == pygame.QUIT: 
                sys.exit()
            if event.type == pygame.KEYDOWN:
                if event.key == K_ESCAPE:
                    return -1
            if event.type == pygame.MOUSEBUTTONDOWN:
                x,y = event.pos[0]// taille_case, event.pos[1]//taille_case 
                if board.collidepoint(event.pos):
                    if first_click:
                        first_click = False
                        set_mines((x,y), nb_mine)
                        set_valeur_case_safe()
                        decouverte(x,y)
                    else:
                        if pygame.mouse.get_pressed()[1] == 1:
                            if not vu[x][y]:
                                grille_flag[x][y] = not grille_flag[x][y]
                        a_update = change_image(x,y)
                        
                    
    pygame.display.flip()



